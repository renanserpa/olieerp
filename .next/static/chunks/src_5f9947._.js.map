{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/button.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? React.Fragment : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,0RACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,8JAAM,QAAQ,GAAG;IACxC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,OAAO,oKAAc,IAAI;AAE/B,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,IAAI;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,oKAAc,IAAI,CAAC,WAAW;AAErD,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW;AAE3D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAc,OAAO;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,oKAAc,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\", className)}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D;QACxE,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/input.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/data-table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport {\n  ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n  getPaginationRowModel,\n  SortingState,\n  getSortedRowModel,\n  ColumnFiltersState,\n  getFilteredRowModel,\n  VisibilityState,\n} from \"@tanstack/react-table\"\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\"\nimport { ChevronDown, Loader2 } from \"lucide-react\"\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]\n  data: TData[]\n  loading?: boolean\n  searchKey?: string\n  meta?: any\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n  loading = false,\n  searchKey,\n  meta,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\n  const [rowSelection, setRowSelection] = React.useState({})\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n    meta,\n  })\n\n  return (\n    <div>\n      {/* Search and Column Visibility */}\n      <div className=\"flex items-center py-4 gap-2\">\n        {searchKey && (\n          <Input\n            placeholder=\"Buscar...\"\n            value={(table.getColumn(searchKey)?.getFilterValue() as string) ?? \"\"}\n            onChange={(event) =>\n              table.getColumn(searchKey)?.setFilterValue(event.target.value)\n            }\n            className=\"max-w-sm\"\n          />\n        )}\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\" className=\"ml-auto\">\n              Colunas <ChevronDown className=\"ml-2 h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className=\"capitalize\"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) =>\n                      column.toggleVisibility(!!value)\n                    }\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                )\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n\n      {/* Table */}\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  )\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {loading ? (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  <div className=\"flex justify-center items-center\">\n                    <Loader2 className=\"h-6 w-6 animate-spin mr-2\" />\n                    <span>Carregando...</span>\n                  </div>\n                </TableCell>\n              </TableRow>\n            ) : table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  Nenhum resultado encontrado.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} de{\" \"}\n          {table.getFilteredRowModel().rows.length} linha(s) selecionada(s).\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Anterior\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Próxima\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 848, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,yBAAW,8JAAM,UAAU,MAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,wKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 900, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/DeliveryColumns.tsx"],"sourcesContent":["\"use client\";\n\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { ArrowUpDown, MoreHorizontal, Edit, Trash2, Eye, Truck } from \"lucide-react\"; // Added icons\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Badge } from \"@/components/ui/badge\";\n\n// Define the data structure for a Delivery\nexport type Delivery = {\n  id: string; \n  order_id: string; \n  order_ref?: string; \n  status_id: string; \n  status_name?: string; \n  status_color?: string; \n  delivery_date?: string; // Changed from scheduled_date for consistency with getDeliveries\n  completed_date?: string; \n  driver_id?: string | null; // Allow null\n  driver_name?: string | null; // Allow null\n  created_at: string;\n  // Add other relevant fields as needed\n};\n\n// Define the expected structure for table meta passed down\nexport interface DeliveryTableMeta {\n  updateStatus: (delivery: Delivery) => void;\n  editDelivery: (deliveryId: string) => void;\n  deleteDelivery: (deliveryId: string, orderRef?: string) => void;\n  viewDetails: (deliveryId: string) => void;\n}\n\nconst formatDate = (dateString: string | null | undefined) => {\n  if (!dateString) return \"-\";\n  try {\n    // Attempt to format assuming it might be ISO 8601 or similar\n    return new Date(dateString).toLocaleDateString(\"pt-BR\", { \n        day: '2-digit', \n        month: '2-digit', \n        year: 'numeric' \n    });\n  } catch (e) {\n    return \"Data inválida\";\n  }\n};\n\nexport const deliveryColumns: ColumnDef<Delivery, DeliveryTableMeta>[] = [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected() || (table.getIsSomePageRowsSelected() && \"indeterminate\")}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Selecionar todas as linhas\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Selecionar linha\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"id\",\n    header: ({ column }) => (\n      <Button\n        variant=\"ghost\"\n        onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n      >\n        Entrega #\n        <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    ),\n    cell: ({ row }) => <div className=\"lowercase font-mono text-xs\">{row.getValue(\"id\").substring(0, 8)}</div>,\n  },\n  {\n    accessorKey: \"order_ref\",\n    header: \"Pedido Cliente\",\n    cell: ({ row }) => <div>{row.original.order_ref || \"-\"}</div>,\n  },\n  {\n    accessorKey: \"delivery_date\",\n    header: \"Data Entrega\",\n    cell: ({ row }) => <div>{formatDate(row.original.delivery_date)}</div>,\n  },\n  {\n    accessorKey: \"driver_name\",\n    header: \"Motorista\",\n    cell: ({ row }) => <div>{row.original.driver_name || \"-\"}</div>,\n  },\n  {\n    accessorKey: \"status_name\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const statusName = row.original.status_name || \"Desconhecido\";\n      // TODO: Apply color based on status_color if available\n      return <Badge variant=\"outline\">{statusName}</Badge>;\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row, table }) => {\n      const delivery = row.original;\n      const meta = table.options.meta;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Abrir menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Ações</DropdownMenuLabel>\n            <DropdownMenuItem onClick={() => meta?.viewDetails(delivery.id)}>\n              <Eye className=\"mr-2 h-4 w-4\" /> Ver Detalhes\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => meta?.updateStatus(delivery)}>\n              <Truck className=\"mr-2 h-4 w-4\" /> Atualizar Status\n            </DropdownMenuItem>\n            <DropdownMenuItem onClick={() => meta?.editDelivery(delivery.id)}>\n               <Edit className=\"mr-2 h-4 w-4\" /> Editar Entrega\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem \n              onClick={() => meta?.deleteDelivery(delivery.id, delivery.order_ref)}\n              className=\"text-red-600 focus:text-red-700 focus:bg-red-100\"\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" /> Excluir Entrega\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1235, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/DeliveryRouteColumns.tsx"],"sourcesContent":["\"use client\";\n\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { ArrowUpDown, MoreHorizontal, Edit, Eye, Trash2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Link from \"next/link\";\n\n// Define the data structure for a Delivery Route based on the actual database schema\nexport type DeliveryRoute = {\n  id: string;\n  name: string;\n  description?: string | null;\n  delivery_date: string;\n  status: string;\n  driver_name?: string | null;\n  vehicle_info?: string | null;\n  notes?: string | null;\n  created_by?: string | null;\n  created_at: string;\n  updated_at?: string | null;\n};\n\nexport const deliveryRouteColumns = (\n  onEdit: (route: DeliveryRoute) => void,\n  onDelete: (route: DeliveryRoute) => void\n): ColumnDef<DeliveryRoute>[] => [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={table.getIsAllPageRowsSelected()}\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Selecionar todas as linhas\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Selecionar linha\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"name\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Nome da Rota\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => (\n      <Link href={`/logistica/rotas/${row.original.id}`} className=\"font-medium text-blue-600 hover:underline\">\n        {row.getValue(\"name\")}\n      </Link>\n    ),\n  },\n  {\n    accessorKey: \"description\",\n    header: \"Descrição\",\n    cell: ({ row }) => <div className=\"truncate max-w-sm\">{row.original.description || \"-\"}</div>,\n  },\n  {\n    accessorKey: \"delivery_date\",\n    header: \"Data de Entrega\",\n    cell: ({ row }) => {\n      const date = new Date(row.original.delivery_date);\n      return <div>{date.toLocaleDateString(\"pt-BR\")}</div>;\n    },\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const status = row.original.status;\n      let variant: \"default\" | \"secondary\" | \"destructive\" | \"outline\" = \"default\";\n      \n      switch (status) {\n        case \"pending\":\n          variant = \"secondary\";\n          break;\n        case \"in_progress\":\n          variant = \"default\";\n          break;\n        case \"completed\":\n          variant = \"outline\";\n          break;\n        default:\n          variant = \"secondary\";\n      }\n      \n      const statusLabels: Record<string, string> = {\n        pending: \"Pendente\",\n        in_progress: \"Em Andamento\",\n        completed: \"Concluída\",\n      };\n      \n      return <Badge variant={variant}>{statusLabels[status] || status}</Badge>;\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  {\n    accessorKey: \"driver_name\",\n    header: \"Motorista\",\n    cell: ({ row }) => <div>{row.original.driver_name || \"-\"}</div>,\n  },\n  {\n    accessorKey: \"created_at\",\n    header: \"Criado em\",\n    cell: ({ row }) => {\n      const date = new Date(row.getValue(\"created_at\"));\n      return <div>{date.toLocaleDateString(\"pt-BR\")}</div>;\n    },\n  },\n  {\n    id: \"actions\",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const route = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n              <span className=\"sr-only\">Abrir menu</span>\n              <MoreHorizontal className=\"h-4 w-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Ações</DropdownMenuLabel>\n            <DropdownMenuItem\n              onClick={() => navigator.clipboard.writeText(route.id)}\n            >\n              Copiar ID da Rota\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={() => onEdit(route)}>\n              <Edit className=\"mr-2 h-4 w-4\" /> Editar Rota\n            </DropdownMenuItem>\n            <DropdownMenuItem \n              onClick={() => window.location.href = `/logistica/rotas/${route.id}`}\n            >\n              <Eye className=\"mr-2 h-4 w-4\" /> Ver Detalhes\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem \n              className=\"text-red-600 focus:text-red-700 focus:bg-red-100/50\"\n              onClick={() => onDelete(route)}\n            >\n              <Trash2 className=\"mr-2 h-4 w-4\" /> Excluir Rota\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1538, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1544, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1583, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1795, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1801, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/select.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\nconst SelectGroup = SelectPrimitive.Group;\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\n// Versão aprimorada do SelectItem que garante que value nunca seja vazio\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, value, ...props }, ref) => {\n  // Garantir que value nunca seja uma string vazia\n  const safeValue = value === \"\" ? `item-${Math.random().toString(36).substring(2, 9)}` : value;\n  \n  return (\n    <SelectPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        className\n      )}\n      value={safeValue}\n      {...props}\n    >\n      <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <Check className=\"h-4 w-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  );\n});\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2016, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2022, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n"],"names":[],"mappings":";;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,uKAAiB,MAAM;kBACtB,cAAA,6LAAC,uKAAiB,OAAO;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2070, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\nimport { ptBR } from \"date-fns/locale\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      locale={ptBR}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n"],"names":[],"mappings":";;;;AAOA;AACA;AAJA;AACA;AAFA;AAAA;AAHA;;;;;;;AAYA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,qKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,QAAQ,oJAAA,CAAA,OAAI;QACZ,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,GAAG,OAAO,iBAAK,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YACnD,WAAW,CAAC,EAAE,GAAG,OAAO,iBAAK,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAU;;;;;;QACvD;QACC,GAAG,KAAK;;;;;;AAGf;KApDS;AAqDT,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 2151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/DeliveryForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport { ptBR } from 'date-fns/locale';\nimport { createClient } from \"@/lib/supabase/client\";\nimport { toast } from \"sonner\";\nimport { Loader2 } from 'lucide-react';\n\n// --- Schemas --- \n\nconst deliveryFormSchema = z.object({\n  order_id: z.string().uuid({ message: \"Selecione um pedido válido.\" }),\n  driver_id: z.string().uuid({ message: \"Selecione um motorista.\" }).optional().nullable(),\n  delivery_date: z.date({ required_error: \"Data de entrega é obrigatória.\" }),\n  status_id: z.string().uuid({ message: \"Selecione um status inicial.\" }),\n  // Add other fields as needed, e.g., address, notes\n});\n\ntype DeliveryFormValues = z.infer<typeof deliveryFormSchema>;\n\n// --- Types --- \n\ninterface Order {\n  id: string;\n  // Add display info like customer name or order number if needed\n}\n\ninterface Driver {\n  id: string;\n  name: string;\n}\n\ninterface Status {\n  id: string;\n  name: string;\n}\n\ninterface DeliveryFormProps {\n  onSuccess: () => void;\n  initialData?: Partial<DeliveryFormValues>; // For editing later\n}\n\n// --- Component --- \n\nexport function DeliveryForm({ onSuccess, initialData }: DeliveryFormProps) {\n  const supabase = createClient();\n  const [orders, setOrders] = React.useState<Order[]>([]);\n  const [drivers, setDrivers] = React.useState<Driver[]>([]);\n  const [statuses, setStatuses] = React.useState<Status[]>([]);\n  const [loadingRelated, setLoadingRelated] = React.useState(true);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const form = useForm<DeliveryFormValues>({\n    resolver: zodResolver(deliveryFormSchema),\n    defaultValues: initialData || {\n      order_id: undefined,\n      driver_id: null,\n      delivery_date: undefined,\n      status_id: undefined, // Default to a specific status like 'Scheduled' if desired\n    },\n  });\n\n  // Fetch related data (Orders, Drivers, Statuses)\n  React.useEffect(() => {\n    const fetchData = async () => {\n      setLoadingRelated(true);\n      try {\n        // Fetch Orders (example: fetch recent pending orders)\n        const { data: ordersData, error: ordersError } = await supabase\n          .from('orders') // TODO: Verify table name and filtering logic\n          .select('id')\n          // .eq('status', 'pending_delivery') // Example filter\n          .limit(50); // Limit results\n        if (ordersError) throw ordersError;\n        setOrders(ordersData || []);\n\n        // Fetch Drivers (Users with 'driver' role?)\n        const { data: driversData, error: driversError } = await supabase\n          .from('users') // TODO: Verify table/view name for drivers\n          .select('id, full_name') // Assuming 'full_name'\n          // .eq('role', 'driver') // Example filter\n          .limit(50);\n        if (driversError) throw driversError;\n        setDrivers(driversData?.map(d => ({ id: d.id, name: d.full_name || `User ${d.id.substring(0,5)}` })) || []);\n\n        // Fetch Statuses (Applicable to deliveries)\n        const { data: statusesData, error: statusesError } = await supabase\n          .from('global_statuses') // TODO: Verify table name\n          .select('id, name')\n          // .contains('applicable_to', ['deliveries']) // Example filter\n          .order('name');\n        if (statusesError) throw statusesError;\n        setStatuses(statusesData || []);\n\n        // Set default status if not editing (e.g., 'Scheduled')\n        if (!initialData && statusesData?.length > 0) {\n            const scheduledStatus = statusesData.find(s => s.name.toLowerCase() === 'agendada');\n            if (scheduledStatus) {\n                form.setValue('status_id', scheduledStatus.id);\n            }\n        }\n\n      } catch (error: any) {\n        console.error(\"Error fetching related data for delivery form:\", error);\n        toast.error(`Erro ao carregar dados: ${error.message}`);\n      } finally {\n        setLoadingRelated(false);\n      }\n    };\n    fetchData();\n  }, [supabase, initialData, form]);\n\n  async function onSubmit(values: DeliveryFormValues) {\n    setIsSubmitting(true);\n    const toastId = toast.loading(initialData ? \"Atualizando entrega...\" : \"Criando entrega...\");\n    try {\n      const dataToSave = {\n        ...values,\n        delivery_date: format(values.delivery_date, 'yyyy-MM-dd'), // Format date for DB\n      };\n\n      // TODO: Implement update logic if initialData exists\n      if (initialData) {\n        console.warn(\"Update logic not implemented yet.\");\n        throw new Error(\"Update logic not implemented yet.\");\n      }\n\n      const { error } = await supabase\n        .from('deliveries') // TODO: Verify table name\n        .insert(dataToSave);\n\n      if (error) throw error;\n\n      toast.success(\"Entrega criada com sucesso!\", { id: toastId });\n      onSuccess(); // Close dialog and refresh table\n    } catch (error: any) {\n      console.error(\"Failed to save delivery:\", error);\n      toast.error(`Erro ao salvar entrega: ${error.message}`, { id: toastId });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        {/* Order Selection */}\n        <FormField\n          control={form.control}\n          name=\"order_id\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Pedido Cliente *</FormLabel>\n              <Select \n                onValueChange={field.onChange} \n                defaultValue={field.value} \n                disabled={loadingRelated || isSubmitting}\n              >\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder={loadingRelated ? \"Carregando pedidos...\" : \"Selecione o pedido\"} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {orders.map((order) => (\n                    <SelectItem key={order.id} value={order.id}>\n                      Pedido #{order.id.substring(0, 8)}...\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Delivery Date */}\n        <FormField\n          control={form.control}\n          name=\"delivery_date\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Data da Entrega *</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={\"outline\"}\n                      className={cn(\n                        \"w-full pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                      disabled={isSubmitting}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\", { locale: ptBR })\n                      ) : (\n                        <span>Escolha uma data</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) => date < new Date(new Date().setDate(new Date().getDate() - 1)) || isSubmitting}\n                    initialFocus\n                    locale={ptBR}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Driver Selection */}\n        <FormField\n          control={form.control}\n          name=\"driver_id\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Motorista (Opcional)</FormLabel>\n              <Select \n                onValueChange={field.onChange} \n                defaultValue={field.value ?? undefined} \n                disabled={loadingRelated || isSubmitting}\n              >\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder={loadingRelated ? \"Carregando motoristas...\" : \"Selecione o motorista\"} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"\">Nenhum</SelectItem> \n                  {drivers.map((driver) => (\n                    <SelectItem key={driver.id} value={driver.id}>\n                      {driver.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Status Selection */}\n        <FormField\n          control={form.control}\n          name=\"status_id\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Status Inicial *</FormLabel>\n              <Select \n                onValueChange={field.onChange} \n                value={field.value} // Use value for controlled component\n                disabled={loadingRelated || isSubmitting}\n              >\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder={loadingRelated ? \"Carregando status...\" : \"Selecione o status inicial\"} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  {statuses.map((status) => (\n                    <SelectItem key={status.id} value={status.id}>\n                      {status.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" disabled={loadingRelated || isSubmitting} className=\"w-full\">\n          {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          {isSubmitting ? (initialData ? 'Salvando...' : 'Criando...') : (initialData ? 'Salvar Alterações' : 'Criar Entrega')}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2688, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2694, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/textarea.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAJA;;;;AASA,MAAM,yBAAW,8JAAM,UAAU,MAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IACxB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG"}},
    {"offset": {"line": 2724, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2730, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/DeliveryRouteForm.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Input } from \"@/components/ui/input\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { cn } from \"@/lib/utils\";\nimport { format } from \"date-fns\";\nimport { ptBR } from 'date-fns/locale';\nimport { createClient } from \"@/lib/supabase/client\";\nimport { toast } from \"sonner\";\nimport { Loader2 } from 'lucide-react';\nimport { Textarea } from \"@/components/ui/textarea\";\n\n// --- Schemas --- \n\nconst deliveryRouteFormSchema = z.object({\n  route_name: z.string().min(3, { message: \"Nome da rota deve ter pelo menos 3 caracteres.\" }),\n  driver_id: z.string().uuid({ message: \"Selecione um motorista.\" }).optional().nullable(),\n  route_date: z.date({ required_error: \"Data da rota é obrigatória.\" }),\n  notes: z.string().optional(),\n  // Add other fields as needed\n});\n\ntype DeliveryRouteFormValues = z.infer<typeof deliveryRouteFormSchema>;\n\n// --- Types --- \n\ninterface Driver {\n  id: string;\n  name: string;\n}\n\ninterface DeliveryRouteFormProps {\n  onSuccess: () => void;\n  initialData?: Partial<DeliveryRouteFormValues>; // For editing later\n}\n\n// --- Component --- \n\nexport function DeliveryRouteForm({ onSuccess, initialData }: DeliveryRouteFormProps) {\n  const supabase = createClient();\n  const [drivers, setDrivers] = React.useState<Driver[]>([]);\n  const [loadingDrivers, setLoadingDrivers] = React.useState(true);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const form = useForm<DeliveryRouteFormValues>({\n    resolver: zodResolver(deliveryRouteFormSchema),\n    defaultValues: initialData || {\n      route_name: \"\",\n      driver_id: null,\n      route_date: undefined,\n      notes: \"\",\n    },\n  });\n\n  // Fetch drivers\n  React.useEffect(() => {\n    const fetchDrivers = async () => {\n      setLoadingDrivers(true);\n      try {\n        const { data, error } = await supabase\n          .from('users') // TODO: Verify table/view name for drivers\n          .select('id, full_name') // Assuming 'full_name'\n          // .eq('role', 'driver') // Example filter\n          .limit(50);\n        if (error) throw error;\n        setDrivers(data?.map(d => ({ id: d.id, name: d.full_name || `User ${d.id.substring(0,5)}` })) || []);\n      } catch (error: any) {\n        console.error(\"Error fetching drivers:\", error);\n        toast.error(`Erro ao carregar motoristas: ${error.message}`);\n      } finally {\n        setLoadingDrivers(false);\n      }\n    };\n    fetchDrivers();\n  }, [supabase]);\n\n  async function onSubmit(values: DeliveryRouteFormValues) {\n    setIsSubmitting(true);\n    const toastId = toast.loading(initialData ? \"Atualizando rota...\" : \"Criando rota...\");\n    try {\n      const dataToSave = {\n        ...values,\n        route_date: format(values.route_date, 'yyyy-MM-dd'), // Format date for DB\n      };\n\n      // TODO: Implement update logic if initialData exists\n      if (initialData) {\n        console.warn(\"Update logic not implemented yet.\");\n        throw new Error(\"Update logic not implemented yet.\");\n      }\n\n      const { error } = await supabase\n        .from('delivery_routes') // TODO: Verify table name\n        .insert(dataToSave);\n\n      if (error) throw error;\n\n      toast.success(\"Rota criada com sucesso!\", { id: toastId });\n      onSuccess(); // Close dialog and refresh table\n    } catch (error: any) {\n      console.error(\"Failed to save delivery route:\", error);\n      toast.error(`Erro ao salvar rota: ${error.message}`, { id: toastId });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        {/* Route Name */}\n        <FormField\n          control={form.control}\n          name=\"route_name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Nome da Rota *</FormLabel>\n              <FormControl>\n                <Input \n                  placeholder=\"Ex: Zona Sul - Terça\" \n                  {...field} \n                  disabled={isSubmitting}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Route Date */}\n        <FormField\n          control={form.control}\n          name=\"route_date\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-col\">\n              <FormLabel>Data da Rota *</FormLabel>\n              <Popover>\n                <PopoverTrigger asChild>\n                  <FormControl>\n                    <Button\n                      variant={\"outline\"}\n                      className={cn(\n                        \"w-full pl-3 text-left font-normal\",\n                        !field.value && \"text-muted-foreground\"\n                      )}\n                      disabled={isSubmitting}\n                    >\n                      {field.value ? (\n                        format(field.value, \"PPP\", { locale: ptBR })\n                      ) : (\n                        <span>Escolha uma data</span>\n                      )}\n                      <CalendarIcon className=\"ml-auto h-4 w-4 opacity-50\" />\n                    </Button>\n                  </FormControl>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-auto p-0\" align=\"start\">\n                  <Calendar\n                    mode=\"single\"\n                    selected={field.value}\n                    onSelect={field.onChange}\n                    disabled={(date) => date < new Date(new Date().setDate(new Date().getDate() - 1)) || isSubmitting}\n                    initialFocus\n                    locale={ptBR}\n                  />\n                </PopoverContent>\n              </Popover>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Driver Selection */}\n        <FormField\n          control={form.control}\n          name=\"driver_id\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Motorista (Opcional)</FormLabel>\n              <Select \n                onValueChange={field.onChange} \n                defaultValue={field.value ?? undefined} \n                disabled={loadingDrivers || isSubmitting}\n              >\n                <FormControl>\n                  <SelectTrigger>\n                    <SelectValue placeholder={loadingDrivers ? \"Carregando motoristas...\" : \"Selecione o motorista\"} />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"\">Nenhum</SelectItem> \n                  {drivers.map((driver) => (\n                    <SelectItem key={driver.id} value={driver.id}>\n                      {driver.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Notes */}\n        <FormField\n          control={form.control}\n          name=\"notes\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Observações (Opcional)</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Instruções ou observações sobre a rota...\"\n                  {...field}\n                  disabled={isSubmitting}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" disabled={isSubmitting} className=\"w-full\">\n          {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          {isSubmitting ? (initialData ? 'Salvando...' : 'Criando...') : (initialData ? 'Salvar Alterações' : 'Criar Rota')}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3181, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,gBAAgB,sKAAgB,OAAO;AAE7C,MAAM,eAAe,sKAAgB,MAAM;AAE3C,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,CAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,sKAAgB,OAAO;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,sKAAgB,KAAK;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,WAAW;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,sKAAgB,WAAW,CAAC,WAAW"}},
    {"offset": {"line": 3326, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3332, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/UpdateDeliveryStatusDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog, \n  DialogContent, \n  DialogHeader, \n  DialogTitle, \n  DialogDescription, \n  DialogFooter,\n  DialogClose\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport { Delivery } from \"./DeliveryColumns\";\nimport { toast } from \"sonner\";\nimport { Loader2, Truck, CheckCircle } from 'lucide-react';\n\n// --- Schemas --- \n\nconst updateDeliveryStatusSchema = z.object({\n  status_id: z.string().uuid({ message: \"Selecione um novo status válido.\" }),\n  notes: z.string().optional(),\n  notify_customer: z.boolean().default(false),\n});\n\ntype UpdateDeliveryStatusFormValues = z.infer<typeof updateDeliveryStatusSchema>;\n\n// --- Types --- \n\ninterface Status {\n  id: string;\n  name: string;\n  color?: string;\n  is_final?: boolean;\n}\n\ninterface UpdateDeliveryStatusDialogProps {\n  delivery: Delivery;\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onSuccess: () => void;\n}\n\n// --- Helper Functions --- \n\nasync function addDeliveryHistory(\n  supabase: ReturnType<typeof createClient>,\n  deliveryId: string,\n  eventType: string,\n  details: Record<string, any>\n) {\n  try {\n    const { data: { user } } = await supabase.auth.getUser();\n    const userId = user?.id || null;\n\n    const { error } = await supabase\n      .from(\"delivery_history\")\n      .insert({\n        delivery_id: deliveryId,\n        event_type: eventType,\n        details: details,\n        user_id: userId,\n        created_at: new Date().toISOString(),\n      });\n\n    if (error) {\n      console.error(`Failed to log delivery history event (${eventType}):`, error);\n      toast.warning(`Não foi possível registrar o evento no histórico de entrega: ${error.message}`);\n    }\n  } catch (error: any) {\n    console.error(`Error in addDeliveryHistory:`, error);\n  }\n}\n\n// --- Component --- \n\nexport function UpdateDeliveryStatusDialog({ \n  delivery, \n  open, \n  onOpenChange, \n  onSuccess \n}: UpdateDeliveryStatusDialogProps) {\n  const supabase = createClient();\n  const [statuses, setStatuses] = React.useState<Status[]>([]);\n  const [loadingStatuses, setLoadingStatuses] = React.useState(true);\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n  const [selectedStatus, setSelectedStatus] = React.useState<Status | null>(null);\n\n  const form = useForm<UpdateDeliveryStatusFormValues>({\n    resolver: zodResolver(updateDeliveryStatusSchema),\n    defaultValues: {\n      status_id: delivery.status_id,\n      notes: \"\",\n      notify_customer: false,\n    },\n  });\n\n  // Fetch statuses applicable to deliveries\n  React.useEffect(() => {\n    const fetchStatuses = async () => {\n      setLoadingStatuses(true);\n      try {\n        const { data, error } = await supabase\n          .from(\"global_statuses\")\n          .select(\"id, name, color, is_final\")\n          .order(\"name\");\n        if (error) throw error;\n        setStatuses(data || []);\n      } catch (error: any) {\n        console.error(\"Error fetching delivery statuses:\", error);\n        toast.error(`Erro ao buscar status de entrega: ${error.message}`);\n      } finally {\n        setLoadingStatuses(false);\n      }\n    };\n\n    if (open) {\n      fetchStatuses();\n      form.reset({ \n        status_id: delivery.status_id, \n        notes: \"\",\n        notify_customer: false\n      });\n    }\n  }, [open, supabase, delivery.status_id, form]);\n\n  // Update selected status when status_id changes\n  React.useEffect(() => {\n    const statusId = form.watch(\"status_id\");\n    const status = statuses.find(s => s.id === statusId);\n    setSelectedStatus(status || null);\n  }, [form.watch(\"status_id\"), statuses]);\n\n  async function onSubmit(values: UpdateDeliveryStatusFormValues) {\n    if (values.status_id === delivery.status_id) {\n        toast.info(\"O status selecionado é o mesmo status atual.\");\n        onOpenChange(false);\n        return;\n    }\n    \n    setIsSubmitting(true);\n    const toastId = toast.loading(\"Atualizando status da entrega...\");\n    try {\n      const oldStatus = statuses.find(s => s.id === delivery.status_id);\n      const newStatus = statuses.find(s => s.id === values.status_id);\n\n      // 1. Update the delivery status\n      const { error: updateError } = await supabase\n        .from(\"deliveries\")\n        .update({ \n          status_id: values.status_id,\n          updated_at: new Date().toISOString()\n        })\n        .eq(\"id\", delivery.id);\n\n      if (updateError) throw updateError;\n\n      // 2. Add history entry\n      await addDeliveryHistory(supabase, delivery.id, 'STATUS_CHANGE', {\n        old_status_id: delivery.status_id,\n        old_status_name: oldStatus?.name || 'Desconhecido',\n        new_status_id: values.status_id,\n        new_status_name: newStatus?.name || 'Desconhecido',\n        notes: values.notes,\n        notify_customer: values.notify_customer,\n      });\n\n      // 3. If notify_customer is true, send notification (placeholder)\n      if (values.notify_customer) {\n        // In a real implementation, this would call an API to send SMS/email\n        console.log(`Notification would be sent to customer for delivery ${delivery.id}`);\n        toast.success(\"Notificação enviada ao cliente sobre a atualização de status.\");\n      }\n\n      toast.success(\"Status da entrega atualizado com sucesso!\", { id: toastId });\n      onSuccess();\n    } catch (error: any) {\n      console.error(\"Failed to update delivery status:\", error);\n      toast.error(`Erro ao atualizar status: ${error.message}`, { id: toastId });\n    } finally {\n      setIsSubmitting(false);\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[500px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Truck className=\"h-5 w-5\" />\n            Atualizar Status da Entrega\n          </DialogTitle>\n          <DialogDescription>\n            Selecione o novo status para a entrega do pedido {delivery.order_ref}\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4 py-4\">\n            {/* Current Status Display */}\n            <div className=\"bg-muted p-3 rounded-md mb-4\">\n              <p className=\"text-sm font-medium mb-1\">Status Atual:</p>\n              <div className=\"flex items-center\">\n                <div \n                  className=\"w-3 h-3 rounded-full mr-2\" \n                  style={{ backgroundColor: statuses.find(s => s.id === delivery.status_id)?.color || '#888' }}\n                />\n                <span>{delivery.status_name || \"Desconhecido\"}</span>\n              </div>\n            </div>\n            \n            {/* Status Selection */}\n            <FormField\n              control={form.control}\n              name=\"status_id\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Novo Status *</FormLabel>\n                  <Select \n                    onValueChange={field.onChange} \n                    value={field.value} \n                    disabled={loadingStatuses || isSubmitting}\n                  >\n                    <FormControl>\n                      <SelectTrigger>\n                        <SelectValue placeholder={loadingStatuses ? \"Carregando...\" : \"Selecione o status\"} />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {statuses.map((status) => (\n                        <SelectItem key={status.id} value={status.id}>\n                          <div className=\"flex items-center\">\n                            <div \n                              className=\"w-3 h-3 rounded-full mr-2\" \n                              style={{ backgroundColor: status.color || '#888' }}\n                            />\n                            {status.name}\n                            {status.is_final && (\n                              <CheckCircle className=\"ml-2 h-4 w-4 text-green-500\" />\n                            )}\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            {/* Notes Field */}\n            <FormField\n              control={form.control}\n              name=\"notes\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Observações (Opcional)</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Ex: Cliente ausente, endereço incorreto...\"\n                      {...field}\n                      disabled={isSubmitting}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            \n            {/* Notify Customer Checkbox */}\n            <FormField\n              control={form.control}\n              name=\"notify_customer\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                  <FormControl>\n                    <input\n                      type=\"checkbox\"\n                      checked={field.value}\n                      onChange={field.onChange}\n                      disabled={isSubmitting}\n                      className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                    />\n                  </FormControl>\n                  <div className=\"space-y-1 leading-none\">\n                    <FormLabel>Notificar cliente</FormLabel>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Enviar notificação ao cliente sobre a mudança de status\n                    </p>\n                  </div>\n                </FormItem>\n              )}\n            />\n            \n            <DialogFooter>\n              <DialogClose asChild>\n                 <Button type=\"button\" variant=\"outline\" disabled={isSubmitting}>Cancelar</Button>\n              </DialogClose>\n              <Button type=\"submit\" disabled={loadingStatuses || isSubmitting}>\n                {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                {isSubmitting ? \"Salvando...\" : \"Salvar Status\"}\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3866, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3872, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/hooks/use-debounce.ts"],"sourcesContent":["\"use client\"\n\nimport { useEffect, useState } from \"react\"\n\nexport function useDebounce<T>(value: T, delay?: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAIO,SAAS,YAAe,KAAQ,EAAE,KAAc;;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAK;IAExD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,MAAM,QAAQ;+CAAW,IAAM,kBAAkB;8CAAQ,SAAS;YAElE;yCAAO;oBACL,aAAa;gBACf;;QACF;gCAAG;QAAC;QAAO;KAAM;IAEjB,OAAO;AACT;GAZgB"}},
    {"offset": {"line": 3903, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3909, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/components/ui/card.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAEA;AAEA;AAJA;;;;AAMA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 4007, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4013, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/_components/AdvancedFilters.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Label } from \"@/components/ui/label\";\nimport { X, Filter, ChevronDown, ChevronUp } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport interface FilterOption {\n  id: string;\n  label: string;\n  options?: { value: string; label: string }[];\n  type: 'text' | 'select' | 'date';\n}\n\ninterface FilterValues {\n  [key: string]: string;\n}\n\ninterface AdvancedFiltersProps {\n  filterOptions: FilterOption[];\n  onFilterChange: (filters: FilterValues) => void;\n  className?: string;\n}\n\nexport const AdvancedFilters: React.FC<AdvancedFiltersProps> = ({\n  filterOptions,\n  onFilterChange,\n  className = '',\n}) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const [filterValues, setFilterValues] = React.useState<FilterValues>({});\n\n  const handleFilterChange = (id: string, value: string) => {\n    const newFilters = { ...filterValues, [id]: value };\n    \n    // Remove empty filters\n    if (!value) {\n      delete newFilters[id];\n    }\n    \n    setFilterValues(newFilters);\n    onFilterChange(newFilters);\n  };\n\n  const clearFilters = () => {\n    setFilterValues({});\n    onFilterChange({});\n  };\n\n  const activeFiltersCount = Object.keys(filterValues).length;\n\n  return (\n    <Card className={`w-full ${className}`}>\n      <div \n        className=\"flex justify-between items-center p-4 cursor-pointer\"\n        onClick={() => setExpanded(!expanded)}\n      >\n        <div className=\"flex items-center gap-2\">\n          <Filter className=\"h-4 w-4\" />\n          <span className=\"font-medium\">\n            Filtros Avançados\n            {activeFiltersCount > 0 && ` (${activeFiltersCount})`}\n          </span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          {activeFiltersCount > 0 && (\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              onClick={(e) => {\n                e.stopPropagation();\n                clearFilters();\n              }}\n            >\n              <X className=\"h-4 w-4 mr-1\" />\n              Limpar\n            </Button>\n          )}\n          {expanded ? (\n            <ChevronUp className=\"h-4 w-4\" />\n          ) : (\n            <ChevronDown className=\"h-4 w-4\" />\n          )}\n        </div>\n      </div>\n      \n      {expanded && (\n        <CardContent className=\"pt-0\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 py-2\">\n            {filterOptions.map((option) => (\n              <div key={option.id} className=\"space-y-2\">\n                <Label htmlFor={option.id}>{option.label}</Label>\n                \n                {option.type === 'select' && option.options && (\n                  <Select\n                    value={filterValues[option.id] || ''}\n                    onValueChange={(value) => handleFilterChange(option.id, value)}\n                  >\n                    <SelectTrigger id={option.id}>\n                      <SelectValue placeholder=\"Selecione...\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">Todos</SelectItem>\n                      {option.options.map((opt) => (\n                        <SelectItem key={opt.value} value={opt.value}>\n                          {opt.label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                )}\n                \n                {option.type === 'text' && (\n                  <Input\n                    id={option.id}\n                    value={filterValues[option.id] || ''}\n                    onChange={(e) => handleFilterChange(option.id, e.target.value)}\n                    placeholder={`Filtrar por ${option.label.toLowerCase()}...`}\n                  />\n                )}\n                \n                {option.type === 'date' && (\n                  <Input\n                    id={option.id}\n                    type=\"date\"\n                    value={filterValues[option.id] || ''}\n                    onChange={(e) => handleFilterChange(option.id, e.target.value)}\n                  />\n                )}\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      )}\n    </Card>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;;;AAPA;;;;;;;;AA2BO,MAAM,kBAAkD,CAAC,EAC9D,aAAa,EACb,cAAc,EACd,YAAY,EAAE,EACf;;IACC,MAAM,CAAC,UAAU,YAAY,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAC/C,MAAM,CAAC,cAAc,gBAAgB,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAe,CAAC;IAEtE,MAAM,qBAAqB,CAAC,IAAY;QACtC,MAAM,aAAa;YAAE,GAAG,YAAY;YAAE,CAAC,GAAG,EAAE;QAAM;QAElD,uBAAuB;QACvB,IAAI,CAAC,OAAO;YACV,OAAO,UAAU,CAAC,GAAG;QACvB;QAEA,gBAAgB;QAChB,eAAe;IACjB;IAEA,MAAM,eAAe;QACnB,gBAAgB,CAAC;QACjB,eAAe,CAAC;IAClB;IAEA,MAAM,qBAAqB,OAAO,IAAI,CAAC,cAAc,MAAM;IAE3D,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAW,CAAC,OAAO,EAAE,WAAW;;0BACpC,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,YAAY,CAAC;;kCAE5B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,yMAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;0CAClB,6LAAC;gCAAK,WAAU;;oCAAc;oCAE3B,qBAAqB,KAAK,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;kCAGzD,6LAAC;wBAAI,WAAU;;4BACZ,qBAAqB,mBACpB,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAQ;gCACR,MAAK;gCACL,SAAS,CAAC;oCACR,EAAE,eAAe;oCACjB;gCACF;;kDAEA,6LAAC,+LAAA,CAAA,IAAC;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;4BAIjC,yBACC,6LAAC,mNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;qDAErB,6LAAC,uNAAA,CAAA,cAAW;gCAAC,WAAU;;;;;;;;;;;;;;;;;;YAK5B,0BACC,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,6LAAC;oBAAI,WAAU;8BACZ,cAAc,GAAG,CAAC,CAAC,uBAClB,6LAAC;4BAAoB,WAAU;;8CAC7B,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAS,OAAO,EAAE;8CAAG,OAAO,KAAK;;;;;;gCAEvC,OAAO,IAAI,KAAK,YAAY,OAAO,OAAO,kBACzC,6LAAC,qIAAA,CAAA,SAAM;oCACL,OAAO,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI;oCAClC,eAAe,CAAC,QAAU,mBAAmB,OAAO,EAAE,EAAE;;sDAExD,6LAAC,qIAAA,CAAA,gBAAa;4CAAC,IAAI,OAAO,EAAE;sDAC1B,cAAA,6LAAC,qIAAA,CAAA,cAAW;gDAAC,aAAY;;;;;;;;;;;sDAE3B,6LAAC,qIAAA,CAAA,gBAAa;;8DACZ,6LAAC,qIAAA,CAAA,aAAU;oDAAC,OAAM;8DAAG;;;;;;gDACpB,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,oBACnB,6LAAC,qIAAA,CAAA,aAAU;wDAAiB,OAAO,IAAI,KAAK;kEACzC,IAAI,KAAK;uDADK,IAAI,KAAK;;;;;;;;;;;;;;;;;gCAQjC,OAAO,IAAI,KAAK,wBACf,6LAAC,oIAAA,CAAA,QAAK;oCACJ,IAAI,OAAO,EAAE;oCACb,OAAO,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI;oCAClC,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;oCAC7D,aAAa,CAAC,YAAY,EAAE,OAAO,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;;;;;;gCAI9D,OAAO,IAAI,KAAK,wBACf,6LAAC,oIAAA,CAAA,QAAK;oCACJ,IAAI,OAAO,EAAE;oCACb,MAAK;oCACL,OAAO,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI;oCAClC,UAAU,CAAC,IAAM,mBAAmB,OAAO,EAAE,EAAE,EAAE,MAAM,CAAC,KAAK;;;;;;;2BApCzD,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;AA8CjC;GAhHa;KAAA"}},
    {"offset": {"line": 4255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/renan/Documents/olie-erp-final-package/src/app/%28dashboard%29/logistica/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { PlusCircle, Truck, Map, Upload, Download } from \"lucide-react\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { DataTable } from \"@/components/ui/data-table\";\nimport { deliveryColumns, type Delivery } from \"./_components/DeliveryColumns\";\nimport { deliveryRouteColumns, type DeliveryRoute } from \"./_components/DeliveryRouteColumns\";\nimport { DeliveryForm } from \"./_components/DeliveryForm\";\nimport { DeliveryRouteForm } from \"./_components/DeliveryRouteForm\";\nimport { UpdateDeliveryStatusDialog } from \"./_components/UpdateDeliveryStatusDialog\";\nimport { createClient } from \"@/lib/supabase/client\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { useDebounce } from \"@/hooks/use-debounce\";\nimport { AdvancedFilters, type FilterOption } from \"./_components/AdvancedFilters\";\nimport Papa from 'papaparse';\nimport { saveAs } from 'file-saver';\nimport { toast } from \"sonner\";\n\n// Define structure for related data (for filters)\ninterface StatusFilter {\n  id: string;\n  name: string;\n}\ninterface DriverFilter {\n  id: string;\n  name: string;\n}\n\n// Fetch Delivery data with filtering\nasync function getDeliveries(supabase: ReturnType<typeof createClient>, filters: { \n  orderId?: string; \n  statusId?: string; \n  driverId?: string;\n  startDate?: string;\n  endDate?: string;\n} = {}): Promise<Delivery[]> {\n  let query = supabase\n    .from('deliveries')\n    .select(`\n      id,\n      delivery_date,\n      order_id,\n      driver_id,\n      status_id,\n      status:global_statuses ( id, name ),\n      created_at\n    `)\n    .order('delivery_date', { ascending: false });\n\n  // Apply filters\n  if (filters.orderId) {\n    query = query.eq('order_id', filters.orderId);\n  }\n  if (filters.statusId) {\n    query = query.eq('status_id', filters.statusId);\n  }\n  if (filters.driverId) {\n    query = query.eq('driver_id', filters.driverId);\n  }\n  if (filters.startDate) {\n    query = query.gte('delivery_date', filters.startDate);\n  }\n  if (filters.endDate) {\n    query = query.lte('delivery_date', filters.endDate);\n  }\n\n  const { data, error } = await query;\n\n  if (error) {\n    console.error(\"Error fetching deliveries:\", error);\n    return [];\n  }\n\n  const mappedData = data?.map(item => ({\n    id: item.id,\n    order_id: item.order_id,\n    order_ref: `Pedido #${item.order_id?.substring(0, 8)}...`, // Placeholder ref\n    delivery_date: item.delivery_date,\n    driver_id: item.driver_id,\n    driver_name: `Motorista ${item.driver_id?.substring(0, 5)}...`, // Placeholder name\n    status_id: item.status_id,\n    status_name: (item.status as { name: string })?.name || 'Desconhecido',\n    created_at: item.created_at,\n  })) || [];\n\n  return mappedData;\n}\n\n// Fetch Delivery Route data with filtering\nasync function getDeliveryRoutes(supabase: ReturnType<typeof createClient>, filters: { \n  routeName?: string; \n  driverId?: string; \n  startDate?: string;\n  endDate?: string;\n} = {}): Promise<DeliveryRoute[]> {\n  let query = supabase\n    .from('delivery_routes')\n    .select(`\n      id,\n      route_name,\n      route_date,\n      driver_id,\n      created_at\n    `)\n    .order('route_date', { ascending: false });\n\n  // Apply filters\n  if (filters.routeName) {\n    query = query.ilike('route_name', `%${filters.routeName}%`);\n  }\n  if (filters.driverId) {\n    query = query.eq('driver_id', filters.driverId);\n  }\n  if (filters.startDate) {\n    query = query.gte('route_date', filters.startDate);\n  }\n  if (filters.endDate) {\n    query = query.lte('route_date', filters.endDate);\n  }\n\n  const { data, error } = await query;\n\n  if (error) {\n    console.error(\"Error fetching delivery routes:\", error);\n    return [];\n  }\n\n  const mappedData = data?.map(item => ({\n    id: item.id,\n    route_name: item.route_name,\n    route_date: item.route_date,\n    driver_id: item.driver_id,\n    driver_name: `Motorista ${item.driver_id?.substring(0, 5)}...`, // Placeholder name\n    created_at: item.created_at,\n  })) || [];\n\n  return mappedData;\n}\n\n// Fetch related data for filters\nasync function getStatusesForFilter(supabase: ReturnType<typeof createClient>): Promise<StatusFilter[]> {\n    console.log(\"Fetching delivery statuses for filter...\");\n    try {\n      const { data, error } = await supabase\n        .from(\"global_statuses\")\n        .select(\"id, name\")\n        // .contains(\"applicable_to\", [\"deliveries\"]) // Example filter\n        .order(\"name\");\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error(\"Error fetching delivery statuses:\", error);\n      return [];\n    }\n}\n\nasync function getDriversForFilter(supabase: ReturnType<typeof createClient>): Promise<DriverFilter[]> {\n    console.log(\"Fetching drivers for filter...\");\n    try {\n      const { data, error } = await supabase\n        .from(\"users\")\n        .select(\"id, full_name\")\n        // .eq(\"role\", \"driver\") // Example filter\n        .limit(50);\n      if (error) throw error;\n      return data?.map(d => ({ id: d.id, name: d.full_name || `User ${d.id.substring(0,5)}` })) || [];\n    } catch (error) {\n      console.error(\"Error fetching drivers:\", error);\n      return [];\n    }\n}\n\n// CSV Export functions\nconst handleExportDeliveriesCSV = (data: Delivery[]) => {\n  if (data.length === 0) { \n    toast.warning('Não há dados para exportar.');\n    return; \n  }\n  const exportData = data.map(del => ({\n    ID_Entrega: del.id,\n    Referencia_Pedido: del.order_ref || '',\n    Data_Entrega: del.delivery_date ? new Date(del.delivery_date).toLocaleDateString('pt-BR') : '',\n    Motorista: del.driver_name || '',\n    Status: del.status_name || '',\n    Data_Criacao: del.created_at ? new Date(del.created_at).toLocaleString('pt-BR') : '',\n  }));\n  const csv = Papa.unparse(exportData);\n  const blob = new Blob([`\\uFEFF${csv}`], { type: 'text/csv;charset=utf-8;' });\n  saveAs(blob, `entregas_${new Date().toISOString().split('T')[0]}.csv`);\n  toast.success(`${data.length} entregas exportadas com sucesso.`);\n};\n\nconst handleExportRoutesCSV = (data: DeliveryRoute[]) => {\n  if (data.length === 0) { \n    toast.warning('Não há dados para exportar.');\n    return; \n  }\n  const exportData = data.map(route => ({\n    ID_Rota: route.id,\n    Nome_Rota: route.route_name || '',\n    Data_Rota: route.route_date ? new Date(route.route_date).toLocaleDateString('pt-BR') : '',\n    Motorista: route.driver_name || '',\n    Data_Criacao: route.created_at ? new Date(route.created_at).toLocaleString('pt-BR') : '',\n  }));\n  const csv = Papa.unparse(exportData);\n  const blob = new Blob([`\\uFEFF${csv}`], { type: 'text/csv;charset=utf-8;' });\n  saveAs(blob, `rotas_entrega_${new Date().toISOString().split('T')[0]}.csv`);\n  toast.success(`${data.length} rotas exportadas com sucesso.`);\n};\n\n// CSV Import functions (Placeholders - require complex mapping)\nconst handleImportDeliveriesCSV = (file: File) => {\n  toast.info(`Importação de entregas do arquivo ${file.name} iniciada.`);\n  // Placeholder for actual implementation\n  setTimeout(() => {\n    toast.warning(\"Funcionalidade de importação ainda não implementada completamente.\");\n  }, 1500);\n};\n\nconst handleImportRoutesCSV = (file: File) => {\n  toast.info(`Importação de rotas do arquivo ${file.name} iniciada.`);\n  // Placeholder for actual implementation\n  setTimeout(() => {\n    toast.warning(\"Funcionalidade de importação ainda não implementada completamente.\");\n  }, 1500);\n};\n\n// Filter options configuration\nconst deliveryFilterOptionsBase: FilterOption[] = [\n  {\n    id: \"orderId\",\n    label: \"ID do Pedido\",\n    type: \"text\",\n  },\n  {\n    id: \"statusId\",\n    label: \"Status\",\n    type: \"select\",\n    options: [], // Populated dynamically\n  },\n  {\n    id: \"driverId\",\n    label: \"Motorista\",\n    type: \"select\",\n    options: [], // Populated dynamically\n  },\n  {\n    id: \"startDate\",\n    label: \"Data Inicial\",\n    type: \"date\",\n  },\n  {\n    id: \"endDate\",\n    label: \"Data Final\",\n    type: \"date\",\n  },\n];\n\nconst routeFilterOptionsBase: FilterOption[] = [\n  {\n    id: \"routeName\",\n    label: \"Nome da Rota\",\n    type: \"text\",\n  },\n  {\n    id: \"driverId\",\n    label: \"Motorista\",\n    type: \"select\",\n    options: [], // Populated dynamically\n  },\n  {\n    id: \"startDate\",\n    label: \"Data Inicial\",\n    type: \"date\",\n  },\n  {\n    id: \"endDate\",\n    label: \"Data Final\",\n    type: \"date\",\n  },\n];\n\nexport default function LogisticaPage() {\n  const supabase = createClient();\n  const [isDeliveryFormOpen, setIsDeliveryFormOpen] = React.useState(false);\n  const [isRouteFormOpen, setIsRouteFormOpen] = React.useState(false);\n  const [deliveries, setDeliveries] = React.useState<Delivery[]>([]);\n  const [routes, setRoutes] = React.useState<DeliveryRoute[]>([]);\n  const [loadingDeliveries, setLoadingDeliveries] = React.useState(true);\n  const [loadingRoutes, setLoadingRoutes] = React.useState(true);\n  const deliveryFileInputRef = React.useRef<HTMLInputElement>(null);\n  const routeFileInputRef = React.useRef<HTMLInputElement>(null);\n\n  // Status update dialog state\n  const [isUpdateStatusDialogOpen, setIsUpdateStatusDialogOpen] = React.useState(false);\n  const [selectedDeliveryForStatusUpdate, setSelectedDeliveryForStatusUpdate] = React.useState<Delivery | null>(null);\n\n  // Filtering state\n  const [deliveryFilters, setDeliveryFilters] = React.useState<{[key: string]: string}>({});\n  const [routeFilters, setRouteFilters] = React.useState<{[key: string]: string}>({});\n  const debouncedDeliveryFilters = useDebounce(deliveryFilters, 500);\n  const debouncedRouteFilters = useDebounce(routeFilters, 500);\n  \n  // State for dynamic filter options\n  const [dynamicDeliveryFilterOptions, setDynamicDeliveryFilterOptions] = React.useState<FilterOption[]>(deliveryFilterOptionsBase);\n  const [dynamicRouteFilterOptions, setDynamicRouteFilterOptions] = React.useState<FilterOption[]>(routeFilterOptionsBase);\n\n  // Fetch statuses and drivers on mount\n  React.useEffect(() => {\n    Promise.all([\n      getStatusesForFilter(supabase),\n      getDriversForFilter(supabase)\n    ]).then(([statusesData, driversData]) => {\n      const driverOptions = driversData.map(d => ({ value: d.id, label: d.name }));\n      const statusOptions = statusesData.map(s => ({ value: s.id, label: s.name }));\n\n      setDynamicDeliveryFilterOptions(prev => \n        prev.map(option => {\n          if (option.id === 'statusId') return { ...option, options: statusOptions };\n          if (option.id === 'driverId') return { ...option, options: driverOptions };\n          return option;\n        })\n      );\n      setDynamicRouteFilterOptions(prev => \n        prev.map(option => \n          option.id === 'driverId' \n            ? { ...option, options: driverOptions } \n            : option\n        )\n      );\n    });\n  }, [supabase]);\n\n  // Fetch data based on filters\n  const fetchAndSetDeliveries = React.useCallback(() => {\n    setLoadingDeliveries(true);\n    getDeliveries(supabase, {\n      orderId: debouncedDeliveryFilters.orderId,\n      statusId: debouncedDeliveryFilters.statusId,\n      driverId: debouncedDeliveryFilters.driverId,\n      startDate: debouncedDeliveryFilters.startDate,\n      endDate: debouncedDeliveryFilters.endDate,\n    })\n      .then(setDeliveries)\n      .finally(() => setLoadingDeliveries(false));\n  }, [supabase, debouncedDeliveryFilters]);\n\n  const fetchAndSetRoutes = React.useCallback(() => {\n    setLoadingRoutes(true);\n    getDeliveryRoutes(supabase, {\n      routeName: debouncedRouteFilters.routeName,\n      driverId: debouncedRouteFilters.driverId,\n      startDate: debouncedRouteFilters.startDate,\n      endDate: debouncedRouteFilters.endDate,\n    })\n      .then(setRoutes)\n      .finally(() => setLoadingRoutes(false));\n  }, [supabase, debouncedRouteFilters]);\n\n  React.useEffect(() => {\n    fetchAndSetDeliveries();\n  }, [fetchAndSetDeliveries]);\n\n  React.useEffect(() => {\n    fetchAndSetRoutes();\n  }, [fetchAndSetRoutes]);\n\n  // Success handlers for forms\n  const handleDeliverySuccess = () => {\n    setIsDeliveryFormOpen(false);\n    fetchAndSetDeliveries();\n  };\n  const handleRouteSuccess = () => {\n    setIsRouteFormOpen(false);\n    fetchAndSetRoutes();\n  };\n  const handleStatusUpdateSuccess = () => {\n    setIsUpdateStatusDialogOpen(false);\n    setSelectedDeliveryForStatusUpdate(null);\n    fetchAndSetDeliveries();\n  };\n\n  // Filter change handlers\n  const handleDeliveryFilterChange = (newFilters: {[key: string]: string}) => {\n    setDeliveryFilters(newFilters);\n  };\n  const handleRouteFilterChange = (newFilters: {[key: string]: string}) => {\n    setRouteFilters(newFilters);\n  };\n\n  // File input triggers\n  const triggerDeliveryFileInput = () => deliveryFileInputRef.current?.click();\n  const triggerRouteFileInput = () => routeFileInputRef.current?.click();\n\n  // File selection handlers\n  const onDeliveryFileSelected = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      handleImportDeliveriesCSV(file);\n      if (deliveryFileInputRef.current) deliveryFileInputRef.current.value = \"\";\n    }\n  };\n  const onRouteFileSelected = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      handleImportRoutesCSV(file);\n      if (routeFileInputRef.current) routeFileInputRef.current.value = \"\";\n    }\n  };\n\n  // Table action handlers\n  const handleUpdateDeliveryStatus = (delivery: Delivery) => {\n    setSelectedDeliveryForStatusUpdate(delivery);\n    setIsUpdateStatusDialogOpen(true);\n  };\n\n  const handleEditDelivery = (deliveryId: string) => {\n    toast.info(`Edição da entrega ${deliveryId.substring(0, 8)}... solicitada.`);\n    toast.warning(\"Funcionalidade de edição ainda não implementada completamente.\");\n  };\n\n  const handleDeleteDelivery = (deliveryId: string, orderRef?: string) => {\n    if (confirm(`Tem certeza que deseja excluir a entrega ${deliveryId.substring(0, 8)}... do pedido ${orderRef || 'desconhecido'}?`)) {\n      toast.info(`Exclusão da entrega ${deliveryId.substring(0, 8)}... solicitada.`);\n      toast.warning(\"Funcionalidade de exclusão ainda não implementada completamente.\");\n    }\n  };\n\n  const handleViewDeliveryDetails = (deliveryId: string) => {\n    toast.info(`Visualização de detalhes da entrega ${deliveryId.substring(0, 8)}... solicitada.`);\n    toast.warning(\"Funcionalidade de visualização de detalhes ainda não implementada completamente.\");\n  };\n\n  // Table meta for actions\n  const deliveryTableMeta = {\n    updateStatus: handleUpdateDeliveryStatus,\n    editDelivery: handleEditDelivery,\n    deleteDelivery: handleDeleteDelivery,\n    viewDetails: handleViewDeliveryDetails,\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-wrap justify-between items-center gap-4\">\n        <h1 className=\"text-2xl font-semibold text-gray-800 dark:text-white\">Gestão de Logística</h1>\n      </div>\n\n      <Tabs defaultValue=\"entregas\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"entregas\">Entregas</TabsTrigger>\n          <TabsTrigger value=\"rotas\">Rotas de Entrega</TabsTrigger>\n        </TabsList>\n\n        {/* Deliveries Tab */}\n        <TabsContent value=\"entregas\" className=\"mt-4\">\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-wrap justify-end items-center gap-2\">\n              <input type=\"file\" ref={deliveryFileInputRef} onChange={onDeliveryFileSelected} accept=\".csv\" style={{ display: 'none' }} />\n              <Button variant=\"outline\" onClick={triggerDeliveryFileInput}><Upload className=\"mr-2 h-4 w-4\" /> Importar</Button>\n              <Button variant=\"outline\" onClick={() => handleExportDeliveriesCSV(deliveries)} disabled={deliveries.length === 0}><Download className=\"mr-2 h-4 w-4\" /> Exportar</Button>\n              <Button onClick={() => setIsDeliveryFormOpen(true)}><PlusCircle className=\"mr-2 h-4 w-4\" /> Nova Entrega</Button>\n            </div>\n            <AdvancedFilters \n              filterOptions={dynamicDeliveryFilterOptions} \n              onFilterChange={handleDeliveryFilterChange}\n            />\n            <DataTable \n              columns={deliveryColumns} \n              data={deliveries} \n              loading={loadingDeliveries}\n              meta={deliveryTableMeta}\n            />\n          </div>\n        </TabsContent>\n\n        {/* Delivery Routes Tab */}\n        <TabsContent value=\"rotas\" className=\"mt-4\">\n          <div className=\"space-y-4\">\n             <div className=\"flex flex-wrap justify-end items-center gap-2\">\n              <input type=\"file\" ref={routeFileInputRef} onChange={onRouteFileSelected} accept=\".csv\" style={{ display: 'none' }} />\n              <Button variant=\"outline\" onClick={triggerRouteFileInput}><Upload className=\"mr-2 h-4 w-4\" /> Importar</Button>\n              <Button variant=\"outline\" onClick={() => handleExportRoutesCSV(routes)} disabled={routes.length === 0}><Download className=\"mr-2 h-4 w-4\" /> Exportar</Button>\n              <Button onClick={() => setIsRouteFormOpen(true)}><PlusCircle className=\"mr-2 h-4 w-4\" /> Nova Rota</Button>\n            </div>\n            <AdvancedFilters \n              filterOptions={dynamicRouteFilterOptions} \n              onFilterChange={handleRouteFilterChange}\n            />\n            <DataTable \n              columns={deliveryRouteColumns} \n              data={routes} \n              loading={loadingRoutes}\n            />\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* Dialog for DeliveryForm */}\n      <Dialog open={isDeliveryFormOpen} onOpenChange={setIsDeliveryFormOpen}>\n        <DialogContent className=\"sm:max-w-[600px]\">\n          <DialogHeader>\n            <DialogTitle>Criar Nova Entrega</DialogTitle>\n            <DialogDescription>Preencha os detalhes abaixo.</DialogDescription>\n          </DialogHeader>\n          <DeliveryForm onSuccess={handleDeliverySuccess} />\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog for DeliveryRouteForm */}\n      <Dialog open={isRouteFormOpen} onOpenChange={setIsRouteFormOpen}>\n        <DialogContent className=\"sm:max-w-[700px]\">\n          <DialogHeader>\n            <DialogTitle>Criar Nova Rota de Entrega</DialogTitle>\n            <DialogDescription>Preencha os detalhes abaixo.</DialogDescription>\n          </DialogHeader>\n          <DeliveryRouteForm onSuccess={handleRouteSuccess} />\n        </DialogContent>\n      </Dialog>\n\n      {/* Dialog for UpdateDeliveryStatus */}\n      {selectedDeliveryForStatusUpdate && (\n        <UpdateDeliveryStatusDialog\n          delivery={selectedDeliveryForStatusUpdate}\n          open={isUpdateStatusDialogOpen}\n          onOpenChange={setIsUpdateStatusDialogOpen}\n          onSuccess={handleStatusUpdateSuccess}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5109, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}